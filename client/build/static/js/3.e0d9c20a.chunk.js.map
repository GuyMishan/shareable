{"version":3,"sources":["../node_modules/lodash/set.js","../node_modules/semantic-ui-react/dist/es/modules/Checkbox/Checkbox.js","../node_modules/semantic-ui-react/dist/es/addons/Radio/Radio.js","../node_modules/semantic-ui-react/dist/es/collections/Form/FormField.js","../node_modules/semantic-ui-react/dist/es/collections/Form/FormButton.js","../node_modules/semantic-ui-react/dist/es/collections/Form/FormCheckbox.js","../node_modules/semantic-ui-react/dist/es/collections/Form/FormDropdown.js","../node_modules/semantic-ui-react/dist/es/collections/Form/FormGroup.js","../node_modules/semantic-ui-react/dist/es/elements/Input/Input.js","../node_modules/semantic-ui-react/dist/es/collections/Form/FormInput.js","../node_modules/semantic-ui-react/dist/es/collections/Form/FormRadio.js","../node_modules/semantic-ui-react/dist/es/addons/Select/Select.js","../node_modules/semantic-ui-react/dist/es/collections/Form/FormSelect.js","../node_modules/semantic-ui-react/dist/es/addons/TextArea/TextArea.js","../node_modules/semantic-ui-react/dist/es/collections/Form/FormTextArea.js","../node_modules/semantic-ui-react/dist/es/collections/Form/Form.js"],"names":["baseSet","__webpack_require__","module","exports","object","path","value","Checkbox_Checkbox","_Component","Checkbox","_getPrototypeOf2","_this","classCallCheck_default","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","Object","react","_this$props","props","disabled","radio","readOnly","checked","state","_this$props2","tabIndex","isNil_default","e","id","_this$state","indeterminate","hasId","isLabelClick","target","labelRef","current","invoke_default","objectSpread_default","isClickFromMouse","handleChange","stopPropagation","canToggle","trySetState","_this$state2","inputRef","preventDefault","_this$state3","set_default","inherits_default","createClass_default","key","setIndeterminate","_this$props3","className","label","name","slider","toggle","type","_this$state4","classes","classnames_default","classNameBuilders","unhandled","getUnhandledProps","ElementType","getElementType","_partitionHTMLProps","htmlPropsUtils","htmlProps","_partitionHTMLProps2","slicedToArray_default","htmlInputProps","rest","labelElement","factories","defaultProps","htmlFor","autoGenerateKey","react_default","a","createElement","extends_default","onClick","handleClick","onChange","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","Ref","innerRef","computeTabIndex","Radio","undefined","propTypes","handledProps","Radio_Radio","FormField","children","content","control","error","inline","required","width","lib","isNil","controlProps","get_default","Form_FormField","FormButton","as","Button","Form_FormButton","FormCheckbox","Form_FormCheckbox","FormDropdown","Dropdown","Form_FormDropdown","FormGroup","grouped","unstackable","widths","Form_FormGroup","Input_Input","Input","loading","icon","focus","select","child","ref","c","refUtils","_this2","_this$props4","action","actionPosition","fluid","iconPosition","input","inverted","labelPosition","size","transparent","_this$partitionProps","partitionProps","_this$partitionProps2","childElements","map_default","toArray","handleChildOverrides","actionElement","create","Label","includes_default","Icon","computeIcon","elements_Input_Input","FormInput","Form_FormInput","FormRadio","Form_FormRadio","Select","selection","Divider","Header","Item","Menu","Select_Select","FormSelect","options","Form_FormSelect","TextArea_TextArea","TextArea","rows","onInput","handleInput","addons_TextArea_TextArea","FormTextArea","Form_FormTextArea","Form_Form","Form","_args","_len2","_key2","reply","success","warning","onSubmit","handleSubmit","__webpack_exports__"],"mappings":"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","file":"static/js/3.e0d9c20a.chunk.js","sourcesContent":["var baseSet = require('./_baseSet');\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\n\n\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _set from \"lodash/set\";\nimport _invoke from \"lodash/invoke\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { createRef } from 'react';\nimport Ref from '../../addons/Ref';\nimport { AutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\n\nvar Checkbox = /*#__PURE__*/function (_Component) {\n  _inherits(Checkbox, _Component);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"inputRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"labelRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"canToggle\", function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          radio = _this$props.radio,\n          readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n      return !disabled && !readOnly && !(radio && checked);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeTabIndex\", function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var id = _this.props.id;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n      var hasId = !_isNil(id);\n      var isLabelClick = e.target === _this.labelRef.current;\n      var isLabelClickAndForwardedToInput = isLabelClick && hasId; // https://github.com/Semantic-Org/Semantic-UI-React/pull/3351\n\n      if (!isLabelClickAndForwardedToInput) {\n        _invoke(_this.props, 'onClick', e, _objectSpread({}, _this.props, {\n          checked: !checked,\n          indeterminate: !!indeterminate\n        }));\n      }\n\n      if (_this.isClickFromMouse) {\n        _this.isClickFromMouse = false;\n\n        if (isLabelClick && !hasId) {\n          _this.handleChange(e);\n        }\n\n        if (hasId) {\n          // To prevent two clicks from being fired from the component we have to stop the propagation\n          // from the \"input\" click: https://github.com/Semantic-Org/Semantic-UI-React/issues/3433\n          e.stopPropagation();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleChange\", function (e) {\n      var checked = _this.state.checked;\n      if (!_this.canToggle()) return;\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        checked: !checked,\n        indeterminate: false\n      }));\n\n      _this.trySetState({\n        checked: !checked,\n        indeterminate: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleMouseDown\", function (e) {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          indeterminate = _this$state2.indeterminate;\n\n      _invoke(_this.props, 'onMouseDown', e, _objectSpread({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n\n      _invoke(_this.inputRef.current, 'focus'); // Heads up!\n      // We need to call \"preventDefault\" to keep element focused.\n\n\n      e.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleMouseUp\", function (e) {\n      var _this$state3 = _this.state,\n          checked = _this$state3.checked,\n          indeterminate = _this$state3.indeterminate;\n      _this.isClickFromMouse = true;\n\n      _invoke(_this.props, 'onMouseUp', e, _objectSpread({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setIndeterminate\", function () {\n      var indeterminate = _this.state.indeterminate;\n\n      _set(_this.inputRef, 'current.indeterminate', !!indeterminate);\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          disabled = _this$props3.disabled,\n          label = _this$props3.label,\n          id = _this$props3.id,\n          name = _this$props3.name,\n          radio = _this$props3.radio,\n          readOnly = _this$props3.readOnly,\n          slider = _this$props3.slider,\n          toggle = _this$props3.toggle,\n          type = _this$props3.type,\n          value = _this$props3.value;\n      var _this$state4 = this.state,\n          checked = _this$state4.checked,\n          indeterminate = _this$state4.indeterminate;\n      var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label\n      // https://semantic-ui.com/modules/checkbox.html#fitted\n      useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\n      var unhandled = getUnhandledProps(Checkbox, this.props);\n      var ElementType = getElementType(Checkbox, this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled, {\n        htmlProps: htmlInputAttrs\n      }),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1]; // Heads Up!\n      // Do not remove empty labels, they are required by SUI CSS\n\n\n      var labelElement = createHTMLLabel(label, {\n        defaultProps: {\n          htmlFor: id\n        },\n        autoGenerateKey: false\n      }) || React.createElement(\"label\", {\n        htmlFor: id\n      });\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        onClick: this.handleClick,\n        onChange: this.handleChange,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp\n      }), React.createElement(Ref, {\n        innerRef: this.inputRef\n      }, React.createElement(\"input\", _extends({}, htmlInputProps, {\n        checked: checked,\n        className: \"hidden\",\n        disabled: disabled,\n        id: id,\n        name: name,\n        readOnly: true,\n        tabIndex: this.computeTabIndex(),\n        type: type,\n        value: value\n      }))), React.createElement(Ref, {\n        innerRef: this.labelRef\n      }, labelElement));\n    }\n  }]);\n\n  return Checkbox;\n}(Component);\n\n_defineProperty(Checkbox, \"defaultProps\", {\n  type: 'checkbox'\n});\n\n_defineProperty(Checkbox, \"autoControlledProps\", ['checked', 'indeterminate']);\n\n_defineProperty(Checkbox, \"handledProps\", [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"onMouseUp\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"]);\n\nexport { Checkbox as default };\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Whether or not checkbox is checked. */\n  checked: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The initial value of checked. */\n  defaultChecked: PropTypes.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: PropTypes.bool,\n\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: PropTypes.bool,\n\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: PropTypes.bool,\n\n  /** A unique identifier. */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: PropTypes.bool,\n\n  /** The text of the associated label element. */\n  label: customPropTypes.itemShorthand,\n\n  /** The HTML input name. */\n  name: PropTypes.string,\n\n  /**\n   * Called when the user attempts to change the checked state.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed checked/indeterminate state.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called when the checkbox or label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Called when the user presses down on the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * Called when the user releases the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseUp: PropTypes.func,\n\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\n\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: PropTypes.bool,\n\n  /** Format to emphasize the current selection state. */\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\n\n  /** A checkbox can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Format to show an on or off choice. */\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\n\n  /** HTML input type, either checkbox or radio. */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** The HTML input value. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport Checkbox from '../../modules/Checkbox';\n/**\n * A Radio is sugar for <Checkbox radio />.\n * Useful for exclusive groups of sliders or toggles.\n * @see Checkbox\n * @see Form\n */\n\nfunction Radio(props) {\n  var slider = props.slider,\n      toggle = props.toggle,\n      type = props.type;\n  var rest = getUnhandledProps(Radio, props); // const ElementType = getElementType(Radio, props)\n  // radio, slider, toggle are exclusive\n  // use an undefined radio if slider or toggle are present\n\n  var radio = !(slider || toggle) || undefined;\n  return React.createElement(Checkbox, _extends({}, rest, {\n    type: type,\n    radio: radio,\n    slider: slider,\n    toggle: toggle\n  }));\n}\n\nRadio.handledProps = [\"slider\", \"toggle\", \"type\"];\nRadio.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Format to emphasize the current selection state. */\n  slider: Checkbox.propTypes.slider,\n\n  /** Format to show an on or off choice. */\n  toggle: Checkbox.propTypes.toggle,\n\n  /** HTML input type, either checkbox or radio. */\n  type: Checkbox.propTypes.type\n} : {};\nRadio.defaultProps = {\n  type: 'radio'\n};\nexport default Radio;","import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { createElement } from 'react';\nimport { childrenUtils, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport Checkbox from '../../modules/Checkbox';\nimport Radio from '../../addons/Radio';\n/**\n * A field is a form element containing a label and an input.\n * @see Form\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Radio\n * @see Select\n * @see Visibility\n */\n\nfunction FormField(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      control = props.control,\n      disabled = props.disabled,\n      error = props.error,\n      inline = props.inline,\n      label = props.label,\n      required = props.required,\n      type = props.type,\n      width = props.width;\n  var classes = cx(useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(inline, 'inline'), useKeyOnly(required, 'required'), useWidthProp(width, 'wide'), 'field', className);\n  var rest = getUnhandledProps(FormField, props);\n  var ElementType = getElementType(FormField, props); // ----------------------------------------\n  // No Control\n  // ----------------------------------------\n\n  if (_isNil(control)) {\n    if (_isNil(label)) {\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), childrenUtils.isNil(children) ? content : children);\n    }\n\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), createHTMLLabel(label, {\n      autoGenerateKey: false\n    }));\n  } // ----------------------------------------\n  // Checkbox/Radio Control\n  // ----------------------------------------\n\n\n  var controlProps = _objectSpread({}, rest, {\n    content: content,\n    children: children,\n    disabled: disabled,\n    required: required,\n    type: type // wrap HTML checkboxes/radios in the label\n\n  });\n\n  if (control === 'input' && (type === 'checkbox' || type === 'radio')) {\n    return React.createElement(ElementType, {\n      className: classes\n    }, React.createElement(\"label\", null, createElement(control, controlProps), \" \", label));\n  } // pass label prop to controls that support it\n\n\n  if (control === Checkbox || control === Radio) {\n    return React.createElement(ElementType, {\n      className: classes\n    }, createElement(control, _objectSpread({}, controlProps, {\n      label: label\n    })));\n  } // ----------------------------------------\n  // Other Control\n  // ----------------------------------------\n\n\n  return React.createElement(ElementType, {\n    className: classes\n  }, createHTMLLabel(label, {\n    defaultProps: {\n      htmlFor: _get(controlProps, 'id')\n    },\n    autoGenerateKey: false\n  }), createElement(control, controlProps));\n}\n\nFormField.handledProps = [\"as\", \"children\", \"className\", \"content\", \"control\", \"disabled\", \"error\", \"inline\", \"label\", \"required\", \"type\", \"width\"];\nFormField.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /**\n   * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').\n   * Extra FormField props are passed to the control component.\n   * Mutually exclusive with children.\n   */\n  control: customPropTypes.some([PropTypes.func, PropTypes.oneOf(['button', 'input', 'select', 'textarea'])]),\n\n  /** Individual fields may be disabled. */\n  disabled: PropTypes.bool,\n\n  /** Individual fields may display an error state. */\n  error: PropTypes.bool,\n\n  /** A field can have its label next to instead of above it. */\n  inline: PropTypes.bool,\n  // Heads Up!\n  // Do not disallow children with `label` shorthand\n  // The `control` might accept a `label` prop and `children`\n\n  /** Mutually exclusive with children. */\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.object]),\n\n  /** A field can show that input is mandatory. */\n  required: PropTypes.bool,\n\n  /** Passed to the control component (i.e. <input type='password' />) */\n  type: customPropTypes.every([customPropTypes.demand(['control'])]),\n\n  /** A field can specify its width in grid columns */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default FormField;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Button from '../../elements/Button';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Button} />.\n * @see Button\n * @see Form\n */\n\nfunction FormButton(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormButton, props);\n  var ElementType = getElementType(FormButton, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormButton.handledProps = [\"as\", \"control\"];\nFormButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormButton.defaultProps = {\n  as: FormField,\n  control: Button\n};\nexport default FormButton;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Checkbox from '../../modules/Checkbox';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Checkbox} />.\n * @see Checkbox\n * @see Form\n */\n\nfunction FormCheckbox(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormCheckbox, props);\n  var ElementType = getElementType(FormCheckbox, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormCheckbox.handledProps = [\"as\", \"control\"];\nFormCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormCheckbox.defaultProps = {\n  as: FormField,\n  control: Checkbox\n};\nexport default FormCheckbox;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Dropdown from '../../modules/Dropdown';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Dropdown} />.\n * @see Dropdown\n * @see Form\n */\n\nfunction FormDropdown(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormDropdown, props);\n  var ElementType = getElementType(FormDropdown, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormDropdown.handledProps = [\"as\", \"control\"];\nFormDropdown.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormDropdown.defaultProps = {\n  as: FormField,\n  control: Dropdown\n};\nexport default FormDropdown;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\n/**\n * A set of fields can appear grouped together.\n * @see Form\n */\n\nfunction FormGroup(props) {\n  var children = props.children,\n      className = props.className,\n      grouped = props.grouped,\n      inline = props.inline,\n      unstackable = props.unstackable,\n      widths = props.widths;\n  var classes = cx(useKeyOnly(grouped, 'grouped'), useKeyOnly(inline, 'inline'), useKeyOnly(unstackable, 'unstackable'), useWidthProp(widths, null, true), 'fields', className);\n  var rest = getUnhandledProps(FormGroup, props);\n  var ElementType = getElementType(FormGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nFormGroup.handledProps = [\"as\", \"children\", \"className\", \"grouped\", \"inline\", \"unstackable\", \"widths\"];\nFormGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Fields can show related choices. */\n  grouped: customPropTypes.every([customPropTypes.disallow(['inline']), PropTypes.bool]),\n\n  /** Multiple fields may be inline in a row. */\n  inline: customPropTypes.every([customPropTypes.disallow(['grouped']), PropTypes.bool]),\n\n  /** A form group can prevent itself from stacking on mobile. */\n  unstackable: PropTypes.bool,\n\n  /** Fields Groups can specify their width in grid columns or automatically divide fields to be equal width. */\n  widths: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal']))\n} : {};\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _includes from \"lodash/includes\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Children, cloneElement, Component, createRef } from 'react';\nimport { childrenUtils, createHTMLInput, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, handleRef, partitionHTMLProps, useKeyOnly, useValueAndKey } from '../../lib';\nimport Button from '../../elements/Button';\nimport Icon from '../../elements/Icon';\nimport Label from '../../elements/Label';\n/**\n * An Input is a field used to elicit a response from a user.\n * @see Button\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Input = /*#__PURE__*/function (_Component) {\n  _inherits(Input, _Component);\n\n  function Input() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Input)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"inputRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeIcon\", function () {\n      var _this$props = _this.props,\n          loading = _this$props.loading,\n          icon = _this$props.icon;\n      if (!_isNil(icon)) return icon;\n      if (loading) return 'spinner';\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeTabIndex\", function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"focus\", function () {\n      return _this.inputRef.current.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"select\", function () {\n      return _this.inputRef.current.select();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleChange\", function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        value: value\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleChildOverrides\", function (child, defaultProps) {\n      return _objectSpread({}, defaultProps, child.props, {\n        ref: function ref(c) {\n          handleRef(child.ref, c);\n          _this.inputRef.current = c;\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"partitionProps\", function () {\n      var _this$props3 = _this.props,\n          disabled = _this$props3.disabled,\n          type = _this$props3.type;\n\n      var tabIndex = _this.computeTabIndex();\n\n      var unhandled = getUnhandledProps(Input, _this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1];\n\n      return [_objectSpread({}, htmlInputProps, {\n        disabled: disabled,\n        type: type,\n        tabIndex: tabIndex,\n        onChange: _this.handleChange,\n        ref: _this.inputRef\n      }), rest];\n    });\n\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          action = _this$props4.action,\n          actionPosition = _this$props4.actionPosition,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          disabled = _this$props4.disabled,\n          error = _this$props4.error,\n          fluid = _this$props4.fluid,\n          focus = _this$props4.focus,\n          icon = _this$props4.icon,\n          iconPosition = _this$props4.iconPosition,\n          input = _this$props4.input,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          size = _this$props4.size,\n          transparent = _this$props4.transparent,\n          type = _this$props4.type;\n      var classes = cx('ui', size, useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(fluid, 'fluid'), useKeyOnly(focus, 'focus'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(transparent, 'transparent'), useValueAndKey(actionPosition, 'action') || useKeyOnly(action, 'action'), useValueAndKey(iconPosition, 'icon') || useKeyOnly(icon || loading, 'icon'), useValueAndKey(labelPosition, 'labeled') || useKeyOnly(label, 'labeled'), 'input', className);\n      var ElementType = getElementType(Input, this.props);\n\n      var _this$partitionProps = this.partitionProps(),\n          _this$partitionProps2 = _slicedToArray(_this$partitionProps, 2),\n          htmlInputProps = _this$partitionProps2[0],\n          rest = _this$partitionProps2[1]; // Render with children\n      // ----------------------------------------\n\n\n      if (!childrenUtils.isNil(children)) {\n        // add htmlInputProps to the `<input />` child\n        var childElements = _map(Children.toArray(children), function (child) {\n          if (child.type !== 'input') return child;\n          return cloneElement(child, _this2.handleChildOverrides(child, htmlInputProps));\n        });\n\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), childElements);\n      } // Render Shorthand\n      // ----------------------------------------\n\n\n      var actionElement = Button.create(action, {\n        autoGenerateKey: false\n      });\n      var labelElement = Label.create(label, {\n        defaultProps: {\n          className: cx('label', // add 'left|right corner'\n          _includes(labelPosition, 'corner') && labelPosition)\n        },\n        autoGenerateKey: false\n      });\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), actionPosition === 'left' && actionElement, labelPosition !== 'right' && labelElement, createHTMLInput(input || type, {\n        defaultProps: htmlInputProps,\n        autoGenerateKey: false\n      }), Icon.create(this.computeIcon(), {\n        autoGenerateKey: false\n      }), actionPosition !== 'left' && actionElement, labelPosition === 'right' && labelElement);\n    }\n  }]);\n\n  return Input;\n}(Component);\n\n_defineProperty(Input, \"defaultProps\", {\n  type: 'text'\n});\n\n_defineProperty(Input, \"handledProps\", [\"action\", \"actionPosition\", \"as\", \"children\", \"className\", \"disabled\", \"error\", \"fluid\", \"focus\", \"icon\", \"iconPosition\", \"input\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"onChange\", \"size\", \"tabIndex\", \"transparent\", \"type\"]);\n\nInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** An Input can be formatted to alert the user to an action they may perform. */\n  action: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An action can appear along side an Input on the left or right. */\n  actionPosition: PropTypes.oneOf(['left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An Input field can show that it is disabled. */\n  disabled: PropTypes.bool,\n\n  /** An Input field can show the data contains errors. */\n  error: PropTypes.bool,\n\n  /** Take on the size of its container. */\n  fluid: PropTypes.bool,\n\n  /** An Input field can show a user is currently interacting with it. */\n  focus: PropTypes.bool,\n\n  /** Optional Icon to display inside the Input. */\n  icon: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An Icon can appear inside an Input on the left or right. */\n  iconPosition: PropTypes.oneOf(['left']),\n\n  /** Shorthand for creating the HTML Input. */\n  input: customPropTypes.itemShorthand,\n\n  /** Format to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Optional Label to display along side the Input. */\n  label: customPropTypes.itemShorthand,\n\n  /** A Label can appear outside an Input on the left or right. */\n  labelPosition: PropTypes.oneOf(['left', 'right', 'left corner', 'right corner']),\n\n  /** An Icon Input field can show that it is currently loading data. */\n  loading: PropTypes.bool,\n\n  /**\n   * Called on change.\n   *\n   * @param {ChangeEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and a proposed value.\n   */\n  onChange: PropTypes.func,\n\n  /** An Input can vary in size. */\n  size: PropTypes.oneOf(['mini', 'small', 'large', 'big', 'huge', 'massive']),\n\n  /** An Input can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Transparent Input has no background. */\n  transparent: PropTypes.bool,\n\n  /** The HTML input type. */\n  type: PropTypes.string\n} : {};\nInput.create = createShorthandFactory(Input, function (type) {\n  return {\n    type: type\n  };\n});\nexport default Input;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Input from '../../elements/Input';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Input} />.\n * @see Form\n * @see Input\n */\n\nfunction FormInput(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormInput, props);\n  var ElementType = getElementType(FormInput, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormInput.handledProps = [\"as\", \"control\"];\nFormInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormInput.defaultProps = {\n  as: FormField,\n  control: Input\n};\nexport default FormInput;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Radio from '../../addons/Radio';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Radio} />.\n * @see Form\n * @see Radio\n */\n\nfunction FormRadio(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormRadio, props);\n  var ElementType = getElementType(FormRadio, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormRadio.handledProps = [\"as\", \"control\"];\nFormRadio.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormRadio.defaultProps = {\n  as: FormField,\n  control: Radio\n};\nexport default FormRadio;","import _extends from \"@babel/runtime/helpers/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Dropdown from '../../modules/Dropdown';\n/**\n * A Select is sugar for <Dropdown selection />.\n * @see Dropdown\n * @see Form\n */\n\nfunction Select(props) {\n  return React.createElement(Dropdown, _extends({}, props, {\n    selection: true\n  }));\n}\n\nSelect.handledProps = [\"options\"];\nSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */\n  options: PropTypes.arrayOf(PropTypes.shape(Dropdown.Item.propTypes)).isRequired\n} : {};\nSelect.Divider = Dropdown.Divider;\nSelect.Header = Dropdown.Header;\nSelect.Item = Dropdown.Item;\nSelect.Menu = Dropdown.Menu;\nexport default Select;","import _extends from \"@babel/runtime/helpers/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Select from '../../addons/Select';\nimport Dropdown from '../../modules/Dropdown';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Select} />.\n * @see Form\n * @see Select\n */\n\nfunction FormSelect(props) {\n  var control = props.control,\n      options = props.options;\n  var rest = getUnhandledProps(FormSelect, props);\n  var ElementType = getElementType(FormSelect, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control,\n    options: options\n  }));\n}\n\nFormSelect.handledProps = [\"as\", \"control\", \"options\"];\nFormSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control,\n\n  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */\n  options: PropTypes.arrayOf(PropTypes.shape(Dropdown.Item.propTypes)).isRequired\n} : {};\nFormSelect.defaultProps = {\n  as: FormField,\n  control: Select\n};\nexport default FormSelect;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _get from \"lodash/get\";\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport Ref from '../../addons/Ref';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A TextArea can be used to allow for extended user input.\n * @see Form\n */\n\nvar TextArea = /*#__PURE__*/function (_Component) {\n  _inherits(TextArea, _Component);\n\n  function TextArea() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TextArea);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TextArea)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"ref\", createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"focus\", function () {\n      return _this.ref.current.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleChange\", function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        value: value\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleInput\", function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onInput', e, _objectSpread({}, _this.props, {\n        value: value\n      }));\n    });\n\n    return _this;\n  }\n\n  _createClass(TextArea, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          rows = _this$props.rows,\n          value = _this$props.value;\n      var rest = getUnhandledProps(TextArea, this.props);\n      var ElementType = getElementType(TextArea, this.props);\n      return React.createElement(Ref, {\n        innerRef: this.ref\n      }, React.createElement(ElementType, _extends({}, rest, {\n        onChange: this.handleChange,\n        onInput: this.handleInput,\n        rows: rows,\n        value: value\n      })));\n    }\n  }]);\n\n  return TextArea;\n}(Component);\n\n_defineProperty(TextArea, \"defaultProps\", {\n  as: 'textarea',\n  rows: 3\n});\n\n_defineProperty(TextArea, \"handledProps\", [\"as\", \"onChange\", \"onInput\", \"rows\", \"value\"]);\n\nTextArea.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /**\n   * Called on change.\n   * @param {SyntheticEvent} event - The React SyntheticEvent object\n   * @param {object} data - All props and the event value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called on input.\n   * @param {SyntheticEvent} event - The React SyntheticEvent object\n   * @param {object} data - All props and the event value.\n   */\n  onInput: PropTypes.func,\n\n  /** Indicates row count for a TextArea. */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** The value of the textarea. */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default TextArea;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport TextArea from '../../addons/TextArea';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={TextArea} />.\n * @see Form\n * @see TextArea\n */\n\nfunction FormTextArea(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormTextArea, props);\n  var ElementType = getElementType(FormTextArea, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormTextArea.handledProps = [\"as\", \"control\"];\nFormTextArea.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormTextArea.defaultProps = {\n  as: FormField,\n  control: TextArea\n};\nexport default FormTextArea;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport FormButton from './FormButton';\nimport FormCheckbox from './FormCheckbox';\nimport FormDropdown from './FormDropdown';\nimport FormField from './FormField';\nimport FormGroup from './FormGroup';\nimport FormInput from './FormInput';\nimport FormRadio from './FormRadio';\nimport FormSelect from './FormSelect';\nimport FormTextArea from './FormTextArea';\n/**\n * A Form displays a set of related user input fields in a structured way.\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Message\n * @see Radio\n * @see Select\n * @see Visibility\n */\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(_args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleSubmit\", function (e) {\n      var action = _this.props.action; // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()\n      // method.\n\n      if (typeof action !== 'string') _invoke(e, 'preventDefault');\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      _invoke.apply(void 0, [_this.props, 'onSubmit', e, _this.props].concat(args));\n    });\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          action = _this$props.action,\n          children = _this$props.children,\n          className = _this$props.className,\n          error = _this$props.error,\n          inverted = _this$props.inverted,\n          loading = _this$props.loading,\n          reply = _this$props.reply,\n          size = _this$props.size,\n          success = _this$props.success,\n          unstackable = _this$props.unstackable,\n          warning = _this$props.warning,\n          widths = _this$props.widths;\n      var classes = cx('ui', size, useKeyOnly(error, 'error'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(reply, 'reply'), useKeyOnly(success, 'success'), useKeyOnly(unstackable, 'unstackable'), useKeyOnly(warning, 'warning'), useWidthProp(widths, null, true), 'form', className);\n      var rest = getUnhandledProps(Form, this.props);\n      var ElementType = getElementType(Form, this.props);\n      return React.createElement(ElementType, _extends({}, rest, {\n        action: action,\n        className: classes,\n        onSubmit: this.handleSubmit\n      }), children);\n    }\n  }]);\n\n  return Form;\n}(Component);\n\n_defineProperty(Form, \"defaultProps\", {\n  as: 'form'\n});\n\n_defineProperty(Form, \"Field\", FormField);\n\n_defineProperty(Form, \"Button\", FormButton);\n\n_defineProperty(Form, \"Checkbox\", FormCheckbox);\n\n_defineProperty(Form, \"Dropdown\", FormDropdown);\n\n_defineProperty(Form, \"Group\", FormGroup);\n\n_defineProperty(Form, \"Input\", FormInput);\n\n_defineProperty(Form, \"Radio\", FormRadio);\n\n_defineProperty(Form, \"Select\", FormSelect);\n\n_defineProperty(Form, \"TextArea\", FormTextArea);\n\n_defineProperty(Form, \"handledProps\", [\"action\", \"as\", \"children\", \"className\", \"error\", \"inverted\", \"loading\", \"onSubmit\", \"reply\", \"size\", \"success\", \"unstackable\", \"warning\", \"widths\"]);\n\nForm.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** The HTML form action */\n  action: PropTypes.string,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Automatically show any error Message children. */\n  error: PropTypes.bool,\n\n  /** A form can have its color inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** Automatically show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** The HTML form submit handler. */\n  onSubmit: PropTypes.func,\n\n  /** A comment can contain a form to reply to a comment. This may have arbitrary content. */\n  reply: PropTypes.bool,\n\n  /** A form can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Automatically show any success Message children. */\n  success: PropTypes.bool,\n\n  /** A form can prevent itself from stacking on mobile. */\n  unstackable: PropTypes.bool,\n\n  /** Automatically show any warning Message children. */\n  warning: PropTypes.bool,\n\n  /** Forms can automatically divide fields to be equal width. */\n  widths: PropTypes.oneOf(['equal'])\n} : {};\nexport default Form;"],"sourceRoot":""}